swagger: "2.0"

info:
  title: "{{title}}"
  version: "1.0"

basePath: /v1.0

securityDefinitions:
    oauth:
        type: oauth2
        flow: password
        tokenUrl: https://oauth.example/token
        x-tokenInfoUrl: https://oauth.example/token_info
        scopes:
            myscope: can do stuff

paths:
  /greeting/{name}:
    post:
      summary: Generate greeting
      description: Generates a greeting message.
      operationId: fakeapi.hello.post_greeting
      responses:
        200:
          description: greeting response
          schema:
            type: object
      parameters:
        - name: name
          in: path
          description: Name of the person to greet.
          required: true
          type: string

  /except:
    get:
      summary: Fails badly
      description: Fails badly
      operationId: fakeapi.hello.internal_error
      produces:
        - text/plain
      responses:
        200:
          description: goodbye response
          schema:
            type: string

  /problem:
    get:
      summary: Fails
      description: Fails
      operationId: fakeapi.hello.with_problem
      produces:
        - application/json
      responses:
        200:
          description: goodbye response
          schema:
            type: string

  /other_problem:
    get:
      summary: Fails
      description: Fails
      operationId: fakeapi.hello.with_problem_txt
      produces:
        - text/plain
      responses:
        200:
          description: goodbye response
          schema:
            type: string

  /json_response_with_undefined_value_to_serialize:
    get:
      description: Will fail
      operationId: fakeapi.hello.get_invalid_response
      produces:
        - application/json
      responses:
        200:
          description: Never happens

  /customized_problem_response:
    get:
      description: Custom problem response
      operationId: fakeapi.hello.get_custom_problem_response
      produces:
        - application/json
      responses:
        200:
          description: Custom problem response

  /problem_exception_with_extra_args:
    get:
      description: Using problem as exception
      operationId: fakeapi.hello.throw_problem_exception
      produces:
        - application/json
      responses:
        200:
          description: Problem exception

  /post_wrong_content_type:
    post:
      description: Unsupported media type
      operationId: fakeapi.hello.post_wrong_content_type
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: The request body
          schema:
            type: object
      responses:
        200:
          description: OK
